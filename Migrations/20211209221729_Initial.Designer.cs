// <auto-generated />
using System;
using Karma.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Karma.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20211209221729_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Karma.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ListingId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserOneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserTwoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("GroupId");

                    b.HasIndex("ListingId");

                    b.HasIndex("UserOneId");

                    b.HasIndex("UserTwoId");

                    b.ToTable("Conversations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = "3e888732f3a04974b3679967f92e1aff",
                            ListingId = 1,
                            UserOneId = 1,
                            UserTwoId = 2
                        },
                        new
                        {
                            Id = 2,
                            GroupId = "2b33bd58fe314cf694f848a593396208",
                            ListingId = 3,
                            UserOneId = 4,
                            UserTwoId = 1
                        });
                });

            modelBuilder.Entity("Karma.Models.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Condition")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("GardenPlant")
                        .HasColumnType("TEXT");

                    b.Property<int>("GardenX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GardenZ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("recipientId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Listings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Vehicles",
                            Condition = 0,
                            DatePublished = new DateTime(2021, 12, 1, 16, 27, 12, 258, DateTimeKind.Unspecified).AddTicks(7492),
                            Description = "",
                            GardenX = 0,
                            GardenZ = 0,
                            ImagePath = "images/default.png",
                            LocationJson = "{\"Country\":\"Lithuania\",\"District\":\"Zemaitija\",\"City\":\"\\u0160iauliai\",\"RadiusKM\":5}",
                            Name = "First Listing",
                            Quantity = 1,
                            Status = 1,
                            UserId = 1,
                            recipientId = 2
                        },
                        new
                        {
                            Id = 2,
                            Category = "Vehicles",
                            Condition = 0,
                            DatePublished = new DateTime(2021, 12, 2, 13, 30, 36, 970, DateTimeKind.Unspecified).AddTicks(8905),
                            Description = "",
                            GardenX = 0,
                            GardenZ = 0,
                            ImagePath = "images/default.png",
                            LocationJson = "{\"Country\":\"Lithuania\",\"District\":\"Zemaitija\",\"City\":\"\\u0160iauliai\",\"RadiusKM\":5}",
                            Name = "Second Listing",
                            Quantity = 1,
                            Status = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Category = "Vehicles",
                            Condition = 0,
                            DatePublished = new DateTime(2021, 12, 2, 13, 30, 43, 459, DateTimeKind.Unspecified).AddTicks(9796),
                            Description = "",
                            GardenX = 0,
                            GardenZ = 0,
                            ImagePath = "images/default.png",
                            LocationJson = "{\"Country\":\"Lithuania\",\"District\":\"Zemaitija\",\"City\":\"\\u0160iauliai\",\"RadiusKM\":5}",
                            Name = "Third Listing",
                            Quantity = 1,
                            Status = 1,
                            UserId = 4,
                            recipientId = 1
                        });
                });

            modelBuilder.Entity("Karma.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConversationId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("TEXT");

                    b.Property<int>("FromId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FromUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("FromUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Karma.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "first@email.com",
                            FirstName = "First",
                            LastName = "Test",
                            Password = "First",
                            Username = "First"
                        },
                        new
                        {
                            Id = 2,
                            Email = "second@email.com",
                            FirstName = "Second",
                            LastName = "Test",
                            Password = "Second",
                            Username = "Second"
                        },
                        new
                        {
                            Id = 3,
                            Email = "third@email.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Password = "Third",
                            Username = "Third"
                        },
                        new
                        {
                            Id = 4,
                            Email = "fourth@email.com",
                            FirstName = "Anna",
                            LastName = "Smith",
                            Password = "Fourth",
                            Username = "Fourth"
                        });
                });

            modelBuilder.Entity("ListingUser", b =>
                {
                    b.Property<int>("RequestedListingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequesteesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RequestedListingsId", "RequesteesId");

                    b.HasIndex("RequesteesId");

                    b.ToTable("ListingUser");

                    b.HasData(
                        new
                        {
                            RequestedListingsId = 1,
                            RequesteesId = 2
                        },
                        new
                        {
                            RequestedListingsId = 3,
                            RequesteesId = 1
                        });
                });

            modelBuilder.Entity("Karma.Models.Conversation", b =>
                {
                    b.HasOne("Karma.Models.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karma.Models.User", "UserOne")
                        .WithMany("StartedConversations")
                        .HasForeignKey("UserOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karma.Models.User", "UserTwo")
                        .WithMany("ParticipatingConversations")
                        .HasForeignKey("UserTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");

                    b.Navigation("UserOne");

                    b.Navigation("UserTwo");
                });

            modelBuilder.Entity("Karma.Models.Listing", b =>
                {
                    b.HasOne("Karma.Models.User", "User")
                        .WithMany("Listings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Karma.Models.Message", b =>
                {
                    b.HasOne("Karma.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId");

                    b.HasOne("Karma.Models.User", "FromUser")
                        .WithMany("Messages")
                        .HasForeignKey("FromUserId");

                    b.Navigation("Conversation");

                    b.Navigation("FromUser");
                });

            modelBuilder.Entity("ListingUser", b =>
                {
                    b.HasOne("Karma.Models.Listing", null)
                        .WithMany()
                        .HasForeignKey("RequestedListingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Karma.Models.User", null)
                        .WithMany()
                        .HasForeignKey("RequesteesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Karma.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Karma.Models.User", b =>
                {
                    b.Navigation("Listings");

                    b.Navigation("Messages");

                    b.Navigation("ParticipatingConversations");

                    b.Navigation("StartedConversations");
                });
#pragma warning restore 612, 618
        }
    }
}
